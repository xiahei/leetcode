求滑动窗口中的最大值
解法一：暴力求解
遍历数组并求滑动窗口中的最大值。若数组长度为n，滑动窗口大小为k，则遍历数组所需的时间复杂度为O(n)，在滑动窗口中找最大值的时间复杂度为o(k)最终时间复杂度为o(nk)。
class Solution(object):
    def maxSlidingWindow(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        res = []
        if(len(nums)<=0 or k<=0):
            return res
        end = len(nums) - k + 1
        for i in range(end):
            res.append(max(nums[i:i+k]))
        return res
        
解法二：使用堆

