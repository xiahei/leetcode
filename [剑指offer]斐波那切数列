方法一：递归
public class Solution {
    public int Fibonacci(int n) {
         if (n<=0){
             return 0;
         }
        if (n==1){
            return 1;
        }
        return Fibonacci(n-1) + Fibonacci(n-2);
    }
}

方法二：时间复杂度O(n)
public class Solution {
    public int Fibonacci(int n) {
         if (n<=0){
             return 0;
         }
        if (n==1){
            return 1;
        }
        int fibNOne = 0;
        int fibNTwo = 1;
        int fibN = 0;
        for(int i=2;i<=n;i++){
            fibN = fibNOne + fibNTwo;
            fibNOne = fibNTwo;
            fibNTwo = fibN;
        }
        return fibN;
    }
}
