//输入一个链表的头节点，反转该链表并输出反转后的头节点
//定义三个指针分别指向当前节点p，当前节点的前一个节点pPrev，当前节点的后一个节点pNext。
//注意pPrev初始化为空，因为反转链表后头节点的后一个节点为空。
//不断进行赋值和三个指针后移的操作，直到pNext和p都指向空节点，此时pPrev指向最后一个节点，即也是反转链表后的头节点。
/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Solution {
    public ListNode ReverseList(ListNode head) {
         ListNode pNext = null;
         ListNode p = head;
         ListNode pPrev = null;
        
        while(p!=null){
            pNext = p.next;
            p.next = pPrev;
            pPrev = p;
            p = pNext;
        }
        
        return pPrev;
    }
}
